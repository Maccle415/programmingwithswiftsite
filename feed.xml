<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
<title type="text">Programming with Swift</title>
<generator uri="https://github.com/mojombo/jekyll">Jekyll</generator>
<link rel="self" type="application/atom+xml" href="http://maccle415.github.io/programmingwithswiftsite/feed.xml" />
<link rel="alternate" type="text/html" href="http://maccle415.github.io/programmingwithswiftsite" />
<updated>2016-04-27T07:43:55-04:00</updated>
<id>http://maccle415.github.io/programmingwithswiftsite/</id>
<author>
  <name>Darren</name>
  <uri>http://maccle415.github.io/programmingwithswiftsite/</uri>
  
</author>


<entry>
  <title type="html"><![CDATA[Swift Protocols - Programming with Swift]]></title>
 <link rel="alternate" type="text/html" href="http://maccle415.github.io/programmingwithswiftsite/swift-protocols/" />
  <id>http://maccle415.github.io/programmingwithswiftsite/swift-protocols</id>
  <updated>2016-04-10 00:11:00 -0400T00:00:00-00:00</updated>
  <published>2016-04-24T00:00:00-04:00</published>
  
  <author>
    <name>Darren</name>
    <uri>http://maccle415.github.io/programmingwithswiftsite</uri>
    <email></email>
  </author>
  <content type="html">
    &lt;h2 id=&quot;what-is-a-protocol&quot;&gt;What is a Protocol?&lt;/h2&gt;

&lt;p&gt;A protocol is a guideline for properties and methods etc. Protocols do not have an implementation they are only a set of rules that the implementation needs to follow.&lt;/p&gt;

&lt;p&gt;If you create a protocol for drawing a square then you might create a method called rect in the protocol. If you then create a class which adopts the protocol then that class would need to implement the rect function.&lt;/p&gt;

&lt;h2 id=&quot;basic-example&quot;&gt;Basic Example:&lt;/h2&gt;

&lt;p&gt;We know that when a class, struct or enumeration adopts a protocol that it needs to implement the protocols functions, properties and anything else that it has.&lt;/p&gt;

&lt;p&gt;Below I created a simple protocol that has a function called toUpper which will take a string argument and convert the string to be uppercase.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-swift&quot; data-lang=&quot;swift&quot;&gt;&lt;span class=&quot;kd&quot;&gt;protocol&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;StringToUpperCase&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;toUpper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;StringClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;StringToUpperCase&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/*

    If you comment out this protocol function you will get an error

    */&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;toUpper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uppercaseString&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;stringVar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;StringClass&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;StringClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;uppcaseString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stringVar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;toUpper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;test string&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uppcaseString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In the first line we are declaring thenew protocol by doing the following&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-swift&quot; data-lang=&quot;swift&quot;&gt;&lt;span class=&quot;kd&quot;&gt;protocol&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;StringToUpperCase&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// functions, properties and anything else goes in here&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then to implement the protocol we add the protocol to the class by writing a colon after the class name and then writing the protocol name.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-swift&quot; data-lang=&quot;swift&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;StringClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;StringToUpperCase&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// class code goes here, and the protocol&#39;s functions, properties etc need&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// need to be added to this class&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In the class we will need to implement the functions or properties that were added to the protocol.&lt;/p&gt;

&lt;h2 id=&quot;adding-properties-to-a-protocol&quot;&gt;Adding properties to a Protocol:&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-swift&quot; data-lang=&quot;swift&quot;&gt;&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;propOne&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;propTwo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

    &lt;p&gt;&lt;a href=&quot;http://maccle415.github.io/programmingwithswiftsite/swift-protocols/&quot;&gt;Swift Protocols - Programming with Swift&lt;/a&gt; was originally published by Darren at &lt;a href=&quot;http://maccle415.github.io/programmingwithswiftsite&quot;&gt;Programming with Swift&lt;/a&gt; on April 24, 2016.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Swift Extensions - Programming with Swift]]></title>
 <link rel="alternate" type="text/html" href="http://maccle415.github.io/programmingwithswiftsite/swift-extensions/" />
  <id>http://maccle415.github.io/programmingwithswiftsite/swift-extensions</id>
  <updated>2016-04-09 00:11:00 -0400T00:00:00-00:00</updated>
  <published>2016-04-10T00:00:00-04:00</published>
  
  <author>
    <name>Darren</name>
    <uri>http://maccle415.github.io/programmingwithswiftsite</uri>
    <email></email>
  </author>
  <content type="html">
    &lt;h2 id=&quot;what-is-an-extension-in-swift&quot;&gt;What is an Extension in Swift?&lt;/h2&gt;

&lt;p&gt;Extensions allow the developer to add new functionality to an existing class, structure or enumeration. This allows you to extend types which you do not have access to, or you could extend a type so that it can follow a new protocol.&lt;/p&gt;

&lt;h2 id=&quot;example&quot;&gt;Example:&lt;/h2&gt;

&lt;p&gt;If you are building a program and that program needs to run a Double through a specific formula or process, then you can use an extension to extend the native Double functionality like I did below to convert Celsius to Fahrenheit and vice versa.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-swift&quot; data-lang=&quot;swift&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// this is how you start an extension, with the extension keyword&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// followed by the type that you want to extend&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;extension&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Double&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Computed properties&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;fahrenheitToCelsius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Double&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;converted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Double&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.8&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;converted&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;celsiusToFahrenheit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Double&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;converted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Double&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;converted&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;34,5 degress Celsius is &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;34.5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;celsiusToFahrenheit&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; Fahrenheit&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;98,2 degress Fahrenheit is &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;98.2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fahrenheitToCelsius&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; Celsius&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;So what is going on in this code? First thing that I am doing is declaring the extension for type Double with&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-swift&quot; data-lang=&quot;swift&quot;&gt;&lt;span class=&quot;kd&quot;&gt;extension&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Double&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// code goes here&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The code inside the extension will become accessible when using that type. So in the print functions I am using the value of 34.5 degrees celsius and then using the .celsiusToFahrenheit property of type Double to convert 34.5C to 94.1F&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion:&lt;/h2&gt;

&lt;p&gt;Extensions are extremely powerful. They really allow one to keep ones code clean and easily readable. Another great thing about extensions is that the dev does not need to name the file in any special way like one had to with Objective C.&lt;/p&gt;

&lt;p&gt;Example code : &lt;a href=&quot;https://github.com/Maccle415/ProgrammingWithSwift/tree/master/Extensions.playground&quot; target=&quot;_blank&quot;&gt;GitHub&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://maccle415.github.io/programmingwithswiftsite/swift-extensions/&quot;&gt;Swift Extensions - Programming with Swift&lt;/a&gt; was originally published by Darren at &lt;a href=&quot;http://maccle415.github.io/programmingwithswiftsite&quot;&gt;Programming with Swift&lt;/a&gt; on April 10, 2016.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Top Swift recources - Programming with Swift]]></title>
 <link rel="alternate" type="text/html" href="http://maccle415.github.io/programmingwithswiftsite/top-swift-recources/" />
  <id>http://maccle415.github.io/programmingwithswiftsite/top-swift-recources</id>
  <updated>2016-04-09 00:11:00 -0400T00:00:00-00:00</updated>
  <published>2016-04-08T00:00:00-04:00</published>
  
  <author>
    <name>Darren</name>
    <uri>http://maccle415.github.io/programmingwithswiftsite</uri>
    <email></email>
  </author>
  <content type="html">
    &lt;p&gt;I never really use 3rd party libraries. I generally find that their documentation is not too great, or it is just that I don’t want to have to spend the time finding a good library.&lt;/p&gt;

&lt;p&gt;The other day I was looking for some open source projects to go through for Swift to try and improve my knowledge and skills. Reading other developers code is a really good way to do that and I highly recommend reading other developers code.&lt;/p&gt;

&lt;p&gt;I found these links below. They are lists of 3rd party libraries and resources for Swift. So whether you like using 3rd party libraries, looking for a 3rd party library for some functionality or just want to read code. The below recourses should help you out.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/hsavit1/Awesome-Swift-Education&quot; target=&quot;_blank&quot;&gt;Awesome Swift Education&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/vsouza/awesome-ios&quot; target=&quot;_blank&quot;&gt;Awesome iOS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Wolg/awesome-swift&quot; target=&quot;_blank&quot;&gt;Awesome Swift #1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/matteocrippa/awesome-swift&quot; target=&quot;_blank&quot;&gt;Awesome Swift #2&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.swifttoolbox.io/&quot; target=&quot;_blank&quot;&gt;Swift toolbox&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://maccle415.github.io/programmingwithswiftsite/top-swift-recources/&quot;&gt;Top Swift recources - Programming with Swift&lt;/a&gt; was originally published by Darren at &lt;a href=&quot;http://maccle415.github.io/programmingwithswiftsite&quot;&gt;Programming with Swift&lt;/a&gt; on April 08, 2016.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[What is Swift? - Programming with Swift]]></title>
 <link rel="alternate" type="text/html" href="http://maccle415.github.io/programmingwithswiftsite/what-is-swift/" />
  <id>http://maccle415.github.io/programmingwithswiftsite/what-is-swift</id>
  <updated>2016-04-09 00:11:00 -0400T00:00:00-00:00</updated>
  <published>2016-04-07T00:00:00-04:00</published>
  
  <author>
    <name>Darren</name>
    <uri>http://maccle415.github.io/programmingwithswiftsite</uri>
    <email></email>
  </author>
  <content type="html">
    &lt;p&gt;Swift is a general purpose programming language created by Apple. It was launched on June 2 2014.&lt;/p&gt;

&lt;p&gt;Swift was created for iOS, OS X, tvOS and Linux development. Swift is meant to be a safer language than Objective C. The syntax of Swift looks a little bit like a scripting language, which is helps makes it easier to learn than Objective C.&lt;/p&gt;

&lt;p&gt;One of the great things about Swift is that it has playgrounds. This allows one to write simple scripts in the playground environment and save it. Makes testing ideas and prototyping small ideas fast and easy.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion:&lt;/h2&gt;

&lt;p&gt;I think that Swift is going to be one of the great programming languages. Making it open source and available Linux was a fantastic idea. There are a few large companies wanting to invest heavily in Swift. IBM is one of the companies already investing into Swift. They have created a Swift based web framework called &lt;a href=&quot;https://github.com/IBM-Swift/Kitura&quot; target=&quot;_blank&quot;&gt;Kitura&lt;/a&gt;.&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://maccle415.github.io/programmingwithswiftsite/what-is-swift/&quot;&gt;What is Swift? - Programming with Swift&lt;/a&gt; was originally published by Darren at &lt;a href=&quot;http://maccle415.github.io/programmingwithswiftsite&quot;&gt;Programming with Swift&lt;/a&gt; on April 07, 2016.&lt;/p&gt;
  </content>
</entry>

</feed>
